; see http://editorconfig.org/ for docs on this file

root = true

[*]
ignore_if_in_header = This code was generated by a tool|<auto-generated>
indent_style = space
indent_size = 4
; uncomment to help with sharing files across os's (i.e. network share or through local vm)
#end_of_line = lf
; avoid a bom, which causes endless problems with naive text tooling
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
; keeping auto-format enabled helps avoid merge hell for projects without CI-based format validation
#disable_auto_format = true

[*.cs]
; uncomment to enable full formatting of c# files
formatters = generic, uncrustify

[*.asmdef]
scrape_api = true

[**/Tests/**.asmdef]
scrape_api = false

[*.Tests.asmdef]
scrape_api = false

[*.md]
indent_size = 2
; trailing whitespace is unfortunately significant in markdown
trim_trailing_whitespace = false
; uncomment to enable basic formatting of markdown files
#formatters = generic

[{Makefile,makefile}]
; tab characters are part of the Makefile format
indent_style = tab

[*.asmdef]
indent_size = 4

[*.json]
indent_size = 2

[*.{vcproj,bat,cmd,xaml,tt,t4,ttinclude}]
end_of_line = crlf

; this VS-specific stuff is based on experiments to see how VS will modify a file after it has been manually edited.
; the settings are meant to closely match what VS does to minimize unnecessary diffs.
[*.{vcxproj,vcxproj.filters}]
indent_style = space
indent_size = 2
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = false
; must be broken out because of 51-char bug (https://github.com/editorconfig/editorconfig-visualstudio/issues/21)
[*.{csproj,pyproj,props,targets}]
indent_style = space
indent_size = 2
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = false
[*.{sln,sln.template}]
indent_style = tab
indent_size = 4
end_of_line = crlf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = false

#### naming styles ##### naming rules[*.cs]dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestiondotnet_naming_rule.interface_should_be_begins_with_i.symbols = interfacedotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_idotnet_naming_rule.types_should_be_pascal_case.severity = suggestiondotnet_naming_rule.types_should_be_pascal_case.symbols = typesdotnet_naming_rule.types_should_be_pascal_case.style = pascal_casedotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestiondotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_membersdotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_casedotnet_naming_rule.method_should_be_pascal_case.severity = suggestiondotnet_naming_rule.method_should_be_pascal_case.symbols = methoddotnet_naming_rule.method_should_be_pascal_case.style = pascal_casedotnet_naming_rule.private_or_internal_field_should_be_begins_with_m_.severity = suggestiondotnet_naming_rule.private_or_internal_field_should_be_begins_with_m_.symbols = private_or_internal_fielddotnet_naming_rule.private_or_internal_field_should_be_begins_with_m_.style = begins_with_m_dotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_s_.severity = suggestiondotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_s_.symbols = private_or_internal_static_fielddotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_s_.style = begins_with_s_dotnet_naming_rule.non_public_const_fields_should_be_begins_with_k_.severity = suggestiondotnet_naming_rule.non_public_const_fields_should_be_begins_with_k_.symbols = non_public_const_fieldsdotnet_naming_rule.non_public_const_fields_should_be_begins_with_k_.style = begins_with_k_dotnet_naming_rule.non_public_static_readonly_fields_should_be_begins_with_k_.severity = suggestiondotnet_naming_rule.non_public_static_readonly_fields_should_be_begins_with_k_.symbols = non_public_static_readonly_fieldsdotnet_naming_rule.non_public_static_readonly_fields_should_be_begins_with_k_.style = begins_with_k_dotnet_naming_rule.event_should_be_camel_case.severity = suggestiondotnet_naming_rule.event_should_be_camel_case.symbols = eventdotnet_naming_rule.event_should_be_camel_case.style = camel_casedotnet_naming_rule.method_parameters_should_be_camel_case.severity = suggestiondotnet_naming_rule.method_parameters_should_be_camel_case.symbols = method_parametersdotnet_naming_rule.method_parameters_should_be_camel_case.style = camel_casedotnet_naming_rule.local_should_be_camel_case.severity = suggestiondotnet_naming_rule.local_should_be_camel_case.symbols = localdotnet_naming_rule.local_should_be_camel_case.style = camel_case# symbol specificationsdotnet_naming_symbols.interface.applicable_kinds = interfacedotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protecteddotnet_naming_symbols.interface.required_modifiers = dotnet_naming_symbols.event.applicable_kinds = eventdotnet_naming_symbols.event.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protecteddotnet_naming_symbols.event.required_modifiers = dotnet_naming_symbols.method.applicable_kinds = methoddotnet_naming_symbols.method.applicable_accessibilities = publicdotnet_naming_symbols.method.required_modifiers = dotnet_naming_symbols.private_or_internal_field.applicable_kinds = fielddotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protecteddotnet_naming_symbols.private_or_internal_field.required_modifiers = dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = fielddotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protecteddotnet_naming_symbols.private_or_internal_static_field.required_modifiers = staticdotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enumdotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protecteddotnet_naming_symbols.types.required_modifiers = dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, methoddotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protecteddotnet_naming_symbols.non_field_members.required_modifiers = dotnet_naming_symbols.non_public_const_fields.applicable_kinds = fielddotnet_naming_symbols.non_public_const_fields.applicable_accessibilities = internal, private, protected, protected_internal, private_protecteddotnet_naming_symbols.non_public_const_fields.required_modifiers = constdotnet_naming_symbols.non_public_static_readonly_fields.applicable_kinds = fielddotnet_naming_symbols.non_public_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protecteddotnet_naming_symbols.non_public_static_readonly_fields.required_modifiers = readonly, staticdotnet_naming_symbols.method_parameters.applicable_kinds = parameterdotnet_naming_symbols.method_parameters.applicable_accessibilities = dotnet_naming_symbols.method_parameters.required_modifiers = dotnet_naming_symbols.local.applicable_kinds = localdotnet_naming_symbols.local.applicable_accessibilities = localdotnet_naming_symbols.local.required_modifiers = # naming stylesdotnet_naming_style.pascal_case.required_prefix = dotnet_naming_style.pascal_case.required_suffix = dotnet_naming_style.pascal_case.word_separator = dotnet_naming_style.pascal_case.capitalization = pascal_casedotnet_naming_style.begins_with_i.required_prefix = Idotnet_naming_style.begins_with_i.required_suffix = dotnet_naming_style.begins_with_i.word_separator = dotnet_naming_style.begins_with_i.capitalization = pascal_casedotnet_naming_style.begins_with_m_.required_prefix = m_dotnet_naming_style.begins_with_m_.required_suffix = dotnet_naming_style.begins_with_m_.word_separator = dotnet_naming_style.begins_with_m_.capitalization = pascal_casedotnet_naming_style.begins_with_s_.required_prefix = s_dotnet_naming_style.begins_with_s_.required_suffix = dotnet_naming_style.begins_with_s_.word_separator = dotnet_naming_style.begins_with_s_.capitalization = pascal_casedotnet_naming_style.begins_with_k_.required_prefix = k_dotnet_naming_style.begins_with_k_.required_suffix = dotnet_naming_style.begins_with_k_.word_separator = dotnet_naming_style.begins_with_k_.capitalization = pascal_casedotnet_naming_style.camel_case.required_prefix = dotnet_naming_style.camel_case.required_suffix = dotnet_naming_style.camel_case.word_separator = dotnet_naming_style.camel_case.capitalization = camel_case