# Modeled after Yamato mobile automation example: https://github.cds.internal.unity3d.com/unity/mobile-yamato-example

{% metadata_file .yamato/project.metafile %}
---

{% for project in projects -%}
{% for editor in project.test_editors -%}
Build_Player_With_Tests_iOS_{{ project.name }}_{{ editor }}:
    name: build {{ project.name }} - {{ editor }} on iOS
    agent:
        type: Unity::VM::osx
        image: package-ci/macos-13:v4
        flavor: b1.large

    commands:
        - pip install unity-downloader-cli==1.2.0 --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
        - unity-downloader-cli -c Editor -c iOS -u {{ editor }} --fast --wait
        - echo "CONFIGURATION = Release" >> ~/XcodeBuildConfig.xcconfig
        - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
        - chmod +x ./utr
        - ./utr --suite=playmode --platform=iOS --editor-location=.Editor --testproject={{ project.path }} --player-save-path=build/players --artifacts_path=build/logs --build-only --testfilter=Unity.BossRoom.Tests.Runtime
    variables:
      UNITY_TESTS_XCODEBUILD_TIMEOUT: 60
      XCODE_XCCONFIG_FILE: ~/XcodeBuildConfig.xcconfig
    artifacts:
        players:
            paths:
                - "build/players/**"
        logs:
            paths:
                - "build/logs/**"
{% endfor -%}
{% endfor -%}

{% for project in projects -%}
{% for editor in project.test_editors -%}
Build_Player_With_Tests_Android_{{ project.name }}_{{ editor }}:
    name: build {{ project.name }} - {{ editor }} on Android
    agent:
        type: Unity::VM
        # Any generic image can be used, no need to have Android tools in the image for building
        # All Android tools will be downloaded by unity-downloader-cli
        image: mobile/android-execution-base:v2.1774381
        flavor: b1.large

    commands:
        # Download unity-downloader-cli
        - gsudo choco source add -n Unity -s https://artifactory-slo.bf.unity3d.com/artifactory/api/nuget/unity-choco-local --priority=1
        - gsudo choco install -y unity-config unity-downloader-cli
        - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output ./utr.bat
        - unity-config project set registry candidates --project-path {{ project.path }}
        - unity-downloader-cli -c Editor -c Android -u {{ editor }} --fast --wait
        - python .yamato/disable-burst-if-requested.py --project-path {{ project.path }} --platform Android
        # Build player(s)
        - ./utr.bat --suite=playmode --platform=Android --editor-location=.Editor --testproject={{ project.path }} --player-save-path=build/players --artifacts_path=build/logs --scripting-backend=il2cpp --build-only --testfilter=Unity.BossRoom.Tests.Runtime
    artifacts:
        players:
            paths:
                - "build/players/**"
        logs:
            paths:
                - "build/logs/**"
    variables:
        CI: true
        ENABLE_BURST_COMPILATION: False
{% endfor -%}
{% endfor -%}

# For every editor version, run iOS project tests without
# running package tests too since they are handled on their respective jobs
{% for project in projects -%}
{% for editor in project.test_editors -%}
mobile_test_ios_{{ project.name }}_{{ editor }}:
    name: {{ project.name }} mobile project tests - {{ editor }} on iOS
    agent:
        type: Unity::mobile::iPhone
        image: package-ci/macos-13:v4
        flavor: b1.medium

    # Skip repository cloning
    skip_checkout: true

    # Set a dependency on the build job
    dependencies:
        - .yamato/mobile-build-and-run.yml#Build_Player_With_Tests_iOS_{{ project.name }}_{{ editor }}

    commands:
        # Download standalone UnityTestRunner
        - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
        # Give UTR execution permissions
        - chmod +x ./utr
        # Run the test build on the device
        - ./utr --suite=playmode --platform=iOS --player-load-path=build/players --artifacts_path=build/test-results --testfilter=Unity.BossRoom.Tests.Runtime

    artifacts:
        logs:
            paths:
                - "build/test-results/**"
{% endfor -%}
{% endfor -%}

  # For every editor version, run Android project tests without
  # running package tests too since they are handled on their respective jobs
{% for project in projects -%}
{% for editor in project.test_editors -%}
mobile_test_android_{{ project.name }}_{{ editor }}:
    name: {{ project.name }} mobile project tests - {{ editor }} on Android
    agent:
        type: Unity::mobile::shield
        image: package-ci/ubuntu-22.04:v4
        flavor: b1.medium

    # Skip repository cloning
    skip_checkout: true
    # Set a dependency on the build job
    dependencies:
        - .yamato/mobile-build-and-run.yml#Build_Player_With_Tests_Android_{{ project.name }}_{{ editor }}
    commands:
      # Download standalone UnityTestRunner
      - unity-downloader-cli --fast --wait -u {{ editor }} -c editor -c Android
      - >
        ANDROID_DEVICE_CONNECTION=$BOKKEN_DEVICE_IP
        ANDROID_SDK_ROOT=$PWD/.Editor/Data/PlaybackEngines/AndroidPlayer/SDK
        UnifiedTestRunner
        --artifacts-path=build/test-results
        --editor-location=.Editor
        --suite=playmode
        --testproject={{ project.path }}
        --platform=Android
        --player-load-path=build/players
        --testfilter=Unity.BossRoom.Tests.Runtime
        --reruncount=2
        --player-connection-ip=$BOKKEN_HOST_IP    
    # Set uploadable artifact paths
    artifacts:
        logs:
            paths:
                - "build/test-results/**"
{% endfor -%}
{% endfor -%}
